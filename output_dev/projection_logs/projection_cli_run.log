2025-05-23 15:40:19,518 [INFO    ] [cost_model.projections.cli.main:80] Starting projection run with CLI arguments: Namespace(config='config/dev_tiny.yaml', census='data/census_preprocessed.parquet', debug=True, output_dir=None, scenario_name='projection_cli')
2025-05-23 15:40:19,518 [INFO    ] [cost_model.projections.cli.main:84] Loading configuration from: config/dev_tiny.yaml
2025-05-23 15:40:19,518 [INFO    ] [cost_model.config.loaders.load_yaml_config:71] Attempting to load configuration from: config/dev_tiny.yaml
2025-05-23 15:40:19,525 [INFO    ] [cost_model.config.loaders.load_yaml_config:89] Successfully loaded configuration from config/dev_tiny.yaml
2025-05-23 15:40:19,531 [DEBUG   ] [cost_model.config.loaders.load_config_to_namespace:179] Configuration loaded into namespace: namespace(scenarios=namespace(baseline=namespace(name='Baseline', description='Default simulation parameters generated from historical data')), global_parameters=namespace(start_year=2025, log_level='DEBUG', projection_years=5, random_seed=42, days_into_year_for_cola=182, days_into_year_for_promotion=182, deterministic_termination=True, monthly_transition=False, maintain_headcount=False, census_template_path='data/census_template.parquet', target_growth=0.03, min_working_age=22, max_working_age=65, new_hire_average_age=30, new_hire_age_std_dev=5, annual_compensation_increase_rate=0.03, compensation=namespace(COLA_rate=0.02, promo_raise_pct=namespace(0_to_1=0.1, 1_to_2=0.1, 2_to_3=0.1, 3_to_4=0.1), merit_dist=namespace(1=namespace(mu=0.035, sigma=0.01), 2=namespace(mu=0.04, sigma=0.012), 3=namespace(mu=0.045, sigma=0.015), 4=namespace(mu=0.05, sigma=0.02)), new_hire=namespace(age_mean=44.5, age_std=11.6)), onboarding=namespace(enabled=True, early_tenure_months=6, hazard_multiplier=1.5, productivity_curve=[0.8, 0.85, 0.9, 0.95, 1.0, 1.0]), annual_termination_rate=0.15, new_hire_termination_rate=0.25, use_expected_attrition=False, new_hire_rate=0.17), job_levels=[namespace(level_id=0, name='Hourly', description='Non-exempt employees paid hourly wages', min_compensation=0, max_compensation=55000, comp_base_salary=40000, comp_age_factor=0.005, comp_stochastic_std_dev=0.1, avg_annual_merit_increase=0.03, promotion_probability=0.08, target_bonus_percent=0.0, job_families=['Operations', 'Facilities']), namespace(level_id=1, name='Staff', description='Entry-level exempt employees, individual contributors', min_compensation=56000, max_compensation=80000, comp_base_salary=65000, comp_age_factor=0.006, comp_stochastic_std_dev=0.1, avg_annual_merit_increase=0.035, promotion_probability=0.12, target_bonus_percent=0.05, job_families=['Engineering', 'HR', 'Finance', 'IT']), namespace(level_id=2, name='Manager', description='First-level management with direct reports', min_compensation=81000, max_compensation=120000, comp_base_salary=95000, comp_age_factor=0.007, comp_stochastic_std_dev=0.1, avg_annual_merit_increase=0.04, promotion_probability=0.08, target_bonus_percent=0.15, job_families=['Engineering', 'HR', 'Finance', 'IT']), namespace(level_id=3, name='SrMgr', description='Mid-level management, often managing other managers', min_compensation=121000, max_compensation=160000, comp_base_salary=140000, comp_age_factor=0.008, comp_stochastic_std_dev=0.1, avg_annual_merit_increase=0.045, promotion_probability=0.05, target_bonus_percent=0.2, job_families=['Engineering', 'HR', 'Finance', 'IT']), namespace(level_id=4, name='Director', description='Senior leadership roles', min_compensation=161000, max_compensation=10000000, comp_base_salary=250000, comp_age_factor=0.01, comp_stochastic_std_dev=0.15, avg_annual_merit_increase=0.05, promotion_probability=0.02, target_bonus_percent=0.3, job_families=['Executive'])], plan_rules=namespace(eligibility=namespace(min_age=21, min_service_months=0), onboarding_bump=namespace(enabled=True, method='sample_plus_rate', rate=0.05), auto_enrollment=namespace(enabled=False, window_days=90, proactive_enrollment_probability=0.0, proactive_rate_range=[0.0, 0.0], default_rate=0.0, re_enroll_existing=False, opt_down_target_rate=0.0, increase_to_match_rate=0.0, increase_high_rate=0.0, outcome_distribution=namespace(prob_opt_out=0.0, prob_stay_default=1.0, prob_opt_down=0.0, prob_increase_to_match=0.0, prob_increase_high=0.0)), auto_increase=namespace(enabled=False, increase_rate=0.0, cap_rate=0.0), employer_match=namespace(tiers=[namespace(match_rate=0.0, cap_deferral_pct=0.0)], dollar_cap=0.0), employer_nec=namespace(rate=0.01), irs_limits=namespace(2024=namespace(compensation_limit=345000, deferral_limit=23000, catchup_limit=7500, catchup_eligibility_age=50)), behavioral_params=namespace(voluntary_enrollment_rate=0.2, voluntary_default_deferral=0.05, voluntary_window_days=180, voluntary_change_probability=0.1, prob_increase_given_change=0.4, prob_decrease_given_change=0.3, prob_stop_given_change=0.05, voluntary_increase_amount=0.01, voluntary_decrease_amount=0.01), contributions=namespace(enabled=True), eligibility_events=namespace(milestone_months=[], milestone_years=[], event_type_map=namespace())))
2025-05-23 15:40:19,531 [INFO    ] [cost_model.projections.cli.main:90] Logging level set to: DEBUG
2025-05-23 15:40:19,531 [INFO    ] [cost_model.projections.cli.main:100] Output will be saved to: output_dev/projection_cli_results
2025-05-23 15:40:19,531 [INFO    ] [cost_model.projections.cli.main:105] Creating initial snapshot from census: data/census_preprocessed.parquet for start year: 2025
2025-05-23 15:40:19,531 [INFO    ] [cost_model.projections.snapshot.create_initial_snapshot:24] Creating initial snapshot for start year: 2025 from data/census_preprocessed.parquet
2025-05-23 15:40:19,579 [INFO    ] [cost_model.projections.snapshot.create_initial_snapshot:34] Loaded census data with 150 records. Columns: ['employee_id', 'employee_role', 'employee_birth_date', 'employee_hire_date', 'employee_termination_date', 'employee_gross_compensation', 'employee_plan_year_compensation', 'employee_capped_compensation', 'employee_deferral_rate', 'employee_contribution', 'employer_core_contribution', 'employer_match_contribution']
2025-05-23 15:40:19,583 [INFO    ] [cost_model.projections.snapshot.create_initial_snapshot:49] Filtered out 50 employees terminated before or at 2025-01-01. Remaining: 100
2025-05-23 15:40:19,583 [INFO    ] [cost_model.projections.snapshot.create_initial_snapshot:61] Setting active status based on termination dates: 100 active out of 100
2025-05-23 15:40:19,588 [INFO    ] [cost_model.projections.snapshot.create_initial_snapshot:130] Inferring job levels from compensation data...
2025-05-23 15:40:19,592 [INFO    ] [cost_model.projections.snapshot.create_initial_snapshot:157] Inferred job levels: {1: 57, 0: 18, 4: 16, 3: 7, 2: 2}
2025-05-23 15:40:19,592 [DEBUG   ] [cost_model.projections.snapshot.create_initial_snapshot:158] Job levels distribution: employee_level
1    57
0    18
4    16
3     7
2     2
Name: count, dtype: Int64
2025-05-23 15:40:19,592 [INFO    ] [cost_model.projections.snapshot.create_initial_snapshot:167] Using 'employee_role' column from census data
2025-05-23 15:40:19,593 [WARNING ] [cost_model.projections.snapshot.create_initial_snapshot:195] Snapshot column 'simulation_year' defined in SNAPSHOT_COL_NAMES is missing. Will be added with default value.
2025-05-23 15:40:19,595 [INFO    ] [cost_model.projections.snapshot.create_initial_snapshot:279] Initial snapshot created with 100 records. Columns: ['employee_id', 'employee_hire_date', 'employee_birth_date', 'employee_role', 'employee_gross_compensation', 'employee_termination_date', 'active', 'employee_deferral_rate', 'employee_tenure_band', 'employee_tenure', 'employee_level', 'job_level_source', 'exited', 'simulation_year']
2025-05-23 15:40:19,595 [DEBUG   ] [cost_model.projections.snapshot.create_initial_snapshot:280] Initial snapshot dtypes:
employee_id                    string[python]
employee_hire_date             datetime64[ns]
employee_birth_date            datetime64[ns]
employee_role                  string[python]
employee_gross_compensation           Float64
employee_termination_date      datetime64[ns]
active                                boolean
employee_deferral_rate                Float64
employee_tenure_band           string[python]
employee_tenure                       float64
employee_level                          Int64
job_level_source                     category
exited                                boolean
simulation_year                         Int64
dtype: object
2025-05-23 15:40:19,595 [INFO    ] [cost_model.projections.cli.main:109] Creating initial event log for start year: 2025
2025-05-23 15:40:19,596 [INFO    ] [cost_model.projections.event_log.create_initial_event_log:19] Creating initial event log for events up to start of year: 2025
2025-05-23 15:40:19,596 [DEBUG   ] [cost_model.projections.event_log.create_initial_event_log:32] Adding missing event log column: value_json with presumed dtype: string
2025-05-23 15:40:19,596 [DEBUG   ] [cost_model.projections.event_log.create_initial_event_log:32] Adding missing event log column: meta with presumed dtype: string
2025-05-23 15:40:19,597 [INFO    ] [cost_model.projections.event_log.create_initial_event_log:56] Initial event log created with 2 records. Dtypes:
event_id       string[python]
event_time     datetime64[ns]
employee_id    string[python]
event_type     string[python]
value_num             Float64
value_json     string[python]
meta           string[python]
dtype: object
2025-05-23 15:40:19,597 [INFO    ] [cost_model.projections.hazard.build_hazard_table:30] Generating hazard table...
2025-05-23 15:40:19,599 [INFO    ] [cost_model.projections.hazard.build_hazard_table:57] Using global rates: Term=0.15, CompPct=0.03, NH_Term=0.25
2025-05-23 15:40:19,599 [INFO    ] [cost_model.projections.hazard.build_hazard_table:74] Hazard table with 70 rows.
2025-05-23 15:40:19,599 [INFO    ] [cost_model.projections.cli.main:130] Starting projection engine...
2025-05-23 15:40:19,599 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:48] [RUN_ONE_YEAR] Simulating year 2025
2025-05-23 15:40:19,599 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:58] [STEP] Markov promotions/exits (experienced only)
2025-05-23 15:40:19,607 [WARNING ] [cost_model.engines.markov_promotion.apply_markov_promotions:162] Found 3 NaN values in EMP_LEVEL, filling with default level 1
2025-05-23 15:40:19,607 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:68] [MARKOV] Promotions: 6, Raises: 6, Exits: 3
2025-05-23 15:40:19,608 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:75] [STEP] Hazard-based terminations (experienced only)
2025-05-23 15:40:19,609 [INFO    ] [cost_model.engines.term.run:83] [TERM] Year 2025: 97 active employees eligible for termination.
2025-05-23 15:40:19,609 [DEBUG   ] [cost_model.engines.term.run:89] [TERM] Year 2025: hazard_slice columns: ['simulation_year', 'employee_level', 'employee_tenure_band', 'term_rate', 'comp_raise_pct', 'new_hire_term_rate', 'cola_pct', 'cfg']
2025-05-23 15:40:19,609 [DEBUG   ] [cost_model.engines.term.run:90] [TERM] Year 2025: hazard_slice head: {'simulation_year': {0: 2025, 1: 2025, 2: 2025, 3: 2025, 4: 2025}, 'employee_level': {0: 1, 1: 1, 2: 1, 3: 4, 4: 2}, 'employee_tenure_band': {0: '5-10yrs', 1: '10+yrs', 2: '3-5yrs', 3: '10+yrs', 4: '5-10yrs'}, 'term_rate': {0: 0.15, 1: 0.15, 2: 0.15, 3: 0.15, 4: 0.15}, 'comp_raise_pct': {0: 0.03, 1: 0.03, 2: 0.03, 3: 0.03, 4: 0.03}, 'new_hire_term_rate': {0: 0.25, 1: 0.25, 2: 0.25, 3: 0.25, 4: 0.25}, 'cola_pct': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0}, 'cfg': {0: {'eligibility': namespace(min_age=21, min_service_months=0), 'onboarding_bump': namespace(enabled=True, method='sample_plus_rate', rate=0.05), 'auto_enrollment': namespace(enabled=False, window_days=90, proactive_enrollment_probability=0.0, proactive_rate_range=[0.0, 0.0], default_rate=0.0, re_enroll_existing=False, opt_down_target_rate=0.0, increase_to_match_rate=0.0, increase_high_rate=0.0, outcome_distribution=namespace(prob_opt_out=0.0, prob_stay_default=1.0, prob_opt_down=0.0, prob_increase_to_match=0.0, prob_increase_high=0.0)), 'auto_increase': namespace(enabled=False, increase_rate=0.0, cap_rate=0.0), 'employer_match': namespace(tiers=[namespace(match_rate=0.0, cap_deferral_pct=0.0)], dollar_cap=0.0), 'employer_nec': namespace(rate=0.01), 'irs_limits': namespace(2024=namespace(compensation_limit=345000, deferral_limit=23000, catchup_limit=7500, catchup_eligibility_age=50)), 'behavioral_params': namespace(voluntary_enrollment_rate=0.2, voluntary_default_deferral=0.05, voluntary_window_days=180, voluntary_change_probability=0.1, prob_increase_given_change=0.4, prob_decrease_given_change=0.3, prob_stop_given_change=0.05, voluntary_increase_amount=0.01, voluntary_decrease_amount=0.01), 'contributions': namespace(enabled=True), 'eligibility_events': namespace(milestone_months=[], milestone_years=[], event_type_map=namespace())}, 1: {'eligibility': namespace(min_age=21, min_service_months=0), 'onboarding_bump': namespace(enabled=True, method='sample_plus_rate', rate=0.05), 'auto_enrollment': namespace(enabled=False, window_days=90, proactive_enrollment_probability=0.0, proactive_rate_range=[0.0, 0.0], default_rate=0.0, re_enroll_existing=False, opt_down_target_rate=0.0, increase_to_match_rate=0.0, increase_high_rate=0.0, outcome_distribution=namespace(prob_opt_out=0.0, prob_stay_default=1.0, prob_opt_down=0.0, prob_increase_to_match=0.0, prob_increase_high=0.0)), 'auto_increase': namespace(enabled=False, increase_rate=0.0, cap_rate=0.0), 'employer_match': namespace(tiers=[namespace(match_rate=0.0, cap_deferral_pct=0.0)], dollar_cap=0.0), 'employer_nec': namespace(rate=0.01), 'irs_limits': namespace(2024=namespace(compensation_limit=345000, deferral_limit=23000, catchup_limit=7500, catchup_eligibility_age=50)), 'behavioral_params': namespace(voluntary_enrollment_rate=0.2, voluntary_default_deferral=0.05, voluntary_window_days=180, voluntary_change_probability=0.1, prob_increase_given_change=0.4, prob_decrease_given_change=0.3, prob_stop_given_change=0.05, voluntary_increase_amount=0.01, voluntary_decrease_amount=0.01), 'contributions': namespace(enabled=True), 'eligibility_events': namespace(milestone_months=[], milestone_years=[], event_type_map=namespace())}, 2: {'eligibility': namespace(min_age=21, min_service_months=0), 'onboarding_bump': namespace(enabled=True, method='sample_plus_rate', rate=0.05), 'auto_enrollment': namespace(enabled=False, window_days=90, proactive_enrollment_probability=0.0, proactive_rate_range=[0.0, 0.0], default_rate=0.0, re_enroll_existing=False, opt_down_target_rate=0.0, increase_to_match_rate=0.0, increase_high_rate=0.0, outcome_distribution=namespace(prob_opt_out=0.0, prob_stay_default=1.0, prob_opt_down=0.0, prob_increase_to_match=0.0, prob_increase_high=0.0)), 'auto_increase': namespace(enabled=False, increase_rate=0.0, cap_rate=0.0), 'employer_match': namespace(tiers=[namespace(match_rate=0.0, cap_deferral_pct=0.0)], dollar_cap=0.0), 'employer_nec': namespace(rate=0.01), 'irs_limits': namespace(2024=namespace(compensation_limit=345000, deferral_limit=23000, catchup_limit=7500, catchup_eligibility_age=50)), 'behavioral_params': namespace(voluntary_enrollment_rate=0.2, voluntary_default_deferral=0.05, voluntary_window_days=180, voluntary_change_probability=0.1, prob_increase_given_change=0.4, prob_decrease_given_change=0.3, prob_stop_given_change=0.05, voluntary_increase_amount=0.01, voluntary_decrease_amount=0.01), 'contributions': namespace(enabled=True), 'eligibility_events': namespace(milestone_months=[], milestone_years=[], event_type_map=namespace())}, 3: {'eligibility': namespace(min_age=21, min_service_months=0), 'onboarding_bump': namespace(enabled=True, method='sample_plus_rate', rate=0.05), 'auto_enrollment': namespace(enabled=False, window_days=90, proactive_enrollment_probability=0.0, proactive_rate_range=[0.0, 0.0], default_rate=0.0, re_enroll_existing=False, opt_down_target_rate=0.0, increase_to_match_rate=0.0, increase_high_rate=0.0, outcome_distribution=namespace(prob_opt_out=0.0, prob_stay_default=1.0, prob_opt_down=0.0, prob_increase_to_match=0.0, prob_increase_high=0.0)), 'auto_increase': namespace(enabled=False, increase_rate=0.0, cap_rate=0.0), 'employer_match': namespace(tiers=[namespace(match_rate=0.0, cap_deferral_pct=0.0)], dollar_cap=0.0), 'employer_nec': namespace(rate=0.01), 'irs_limits': namespace(2024=namespace(compensation_limit=345000, deferral_limit=23000, catchup_limit=7500, catchup_eligibility_age=50)), 'behavioral_params': namespace(voluntary_enrollment_rate=0.2, voluntary_default_deferral=0.05, voluntary_window_days=180, voluntary_change_probability=0.1, prob_increase_given_change=0.4, prob_decrease_given_change=0.3, prob_stop_given_change=0.05, voluntary_increase_amount=0.01, voluntary_decrease_amount=0.01), 'contributions': namespace(enabled=True), 'eligibility_events': namespace(milestone_months=[], milestone_years=[], event_type_map=namespace())}, 4: {'eligibility': namespace(min_age=21, min_service_months=0), 'onboarding_bump': namespace(enabled=True, method='sample_plus_rate', rate=0.05), 'auto_enrollment': namespace(enabled=False, window_days=90, proactive_enrollment_probability=0.0, proactive_rate_range=[0.0, 0.0], default_rate=0.0, re_enroll_existing=False, opt_down_target_rate=0.0, increase_to_match_rate=0.0, increase_high_rate=0.0, outcome_distribution=namespace(prob_opt_out=0.0, prob_stay_default=1.0, prob_opt_down=0.0, prob_increase_to_match=0.0, prob_increase_high=0.0)), 'auto_increase': namespace(enabled=False, increase_rate=0.0, cap_rate=0.0), 'employer_match': namespace(tiers=[namespace(match_rate=0.0, cap_deferral_pct=0.0)], dollar_cap=0.0), 'employer_nec': namespace(rate=0.01), 'irs_limits': namespace(2024=namespace(compensation_limit=345000, deferral_limit=23000, catchup_limit=7500, catchup_eligibility_age=50)), 'behavioral_params': namespace(voluntary_enrollment_rate=0.2, voluntary_default_deferral=0.05, voluntary_window_days=180, voluntary_change_probability=0.1, prob_increase_given_change=0.4, prob_decrease_given_change=0.3, prob_stop_given_change=0.05, voluntary_increase_amount=0.01, voluntary_decrease_amount=0.01), 'contributions': namespace(enabled=True), 'eligibility_events': namespace(milestone_months=[], milestone_years=[], event_type_map=namespace())}}}
2025-05-23 15:40:19,610 [DEBUG   ] [cost_model.engines.term.run:100] [TERM] Year 2025: Active employee levels: [1, 4, 2, 3, 0]
2025-05-23 15:40:19,610 [DEBUG   ] [cost_model.engines.term.run:101] [TERM] Year 2025: Active employee tenure bands: ['5-10yrs', '10+yrs', '3-5yrs', '1-3yrs', '0-1yr']
2025-05-23 15:40:19,610 [DEBUG   ] [cost_model.engines.term.run:102] [TERM] Year 2025: Hazard table levels: [1, 4, 2, 3, 0]
2025-05-23 15:40:19,610 [DEBUG   ] [cost_model.engines.term.run:103] [TERM] Year 2025: Hazard table tenure bands: ['5-10yrs', '10+yrs', '3-5yrs', '1-3yrs', '0-1yr']
2025-05-23 15:40:19,612 [ERROR   ] [cost_model.engines.term.run:114] [TERM] Year 2025: CRITICAL ERROR - Merge inflated employee count from 97 to 485!
2025-05-23 15:40:19,612 [ERROR   ] [cost_model.engines.term.run:115] [TERM] Year 2025: This will cause incorrect termination counts.
2025-05-23 15:40:19,613 [INFO    ] [cost_model.engines.term.run:122] [TERM] Year 2025: Corrected employee count back to 97.
2025-05-23 15:40:19,613 [INFO    ] [cost_model.engines.term.run:136] [TERM] Year 2025: 0 employees with zero term_rate after merge.
2025-05-23 15:40:19,613 [INFO    ] [cost_model.engines.term.run:137] [TERM] Year 2025: term_rate stats: min=0.15, max=0.15, mean=0.14999999999999997, median=0.15.
2025-05-23 15:40:19,613 [INFO    ] [cost_model.engines.term.run:150] [TERM] Year 2025: Stochastic mode, min prob=0.15, max prob=0.15.
2025-05-23 15:40:19,613 [INFO    ] [cost_model.engines.term.run:153] [TERM] Year 2025: 18 employees selected for termination.
2025-05-23 15:40:19,621 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:88] [TERM] Terminations: 18, Prorated comp events: 18
2025-05-23 15:40:19,622 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:94] [STEP] Update snapshot to survivors (post-terminations)
2025-05-23 15:40:19,622 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:102] [DEBUG-HIRE] Start: 79, Net Hires: 2, Gross Hires: 3, Target EOY: 81
2025-05-23 15:40:19,622 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:105] [STEP] Generate/apply hires
2025-05-23 15:40:19,622 [INFO    ] [cost_model.engines.hire.run:47] [HIRE.RUN YR=2025] Hires to make (passed-in): 3
2025-05-23 15:40:19,622 [INFO    ] [cost_model.engines.hire.run:73] [HIRE.RUN YR=2025] Using default_params from global_params.compensation.new_hire
2025-05-23 15:40:19,622 [INFO    ] [cost_model.engines.hire.run:85] [HIRE.RUN YR=2025] Available roles in role_comp_params: []
2025-05-23 15:40:19,625 [INFO    ] [cost_model.engines.hire.run:234] [HIRE.RUN YR=2025] Sampled new hire salaries: mean=$<NA>, min=$<NA>, max=$<NA>
2025-05-23 15:40:19,626 [INFO    ] [cost_model.engines.hire.run:238] [HIRE.RUN YR=2025] Salary distribution stats:
2025-05-23 15:40:19,626 [INFO    ] [cost_model.engines.hire.run:239] [HIRE.RUN YR=2025]   25th percentile: $nan
2025-05-23 15:40:19,626 [INFO    ] [cost_model.engines.hire.run:240] [HIRE.RUN YR=2025]   Median: $nan
2025-05-23 15:40:19,626 [INFO    ] [cost_model.engines.hire.run:241] [HIRE.RUN YR=2025]   75th percentile: $nan
2025-05-23 15:40:19,626 [DEBUG   ] [cost_model.engines.hire.run:264] Processing birth date for NH_2025_0001: type=<class 'float'>, value=nan
2025-05-23 15:40:19,626 [DEBUG   ] [cost_model.engines.hire.run:280] Processed birth date for NH_2025_0001: final=NaT, str=None
2025-05-23 15:40:19,626 [DEBUG   ] [cost_model.engines.hire.run:264] Processing birth date for NH_2025_0002: type=<class 'float'>, value=nan
2025-05-23 15:40:19,626 [DEBUG   ] [cost_model.engines.hire.run:280] Processed birth date for NH_2025_0002: final=NaT, str=None
2025-05-23 15:40:19,626 [DEBUG   ] [cost_model.engines.hire.run:264] Processing birth date for NH_2025_0003: type=<class 'float'>, value=nan
2025-05-23 15:40:19,626 [DEBUG   ] [cost_model.engines.hire.run:280] Processed birth date for NH_2025_0003: final=NaT, str=None
2025-05-23 15:40:19,626 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:118] [HIRES] Added 3 new hires
2025-05-23 15:40:19,631 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:171] [STEP] Deterministic new-hire terminations
2025-05-23 15:40:19,631 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:176] [NH-TERM] Skipping new hire terminations - not implemented
2025-05-23 15:40:19,631 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:179] [STEP] Final snapshot + validation
2025-05-23 15:40:19,631 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:183] [FINAL] Final headcount: 82
2025-05-23 15:40:19,631 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:186] [STEP] Build event log
2025-05-23 15:40:19,633 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:211] [EVENT_LOG] Total events: 36
2025-05-23 15:40:19,633 [INFO    ] [cost_model.engines.run_one_year.orchestrator.run_one_year:213] [RESULT] EOY=82 (target=81)
2025-05-23 15:40:19,633 [INFO    ] [cost_model.projections.cli.main:141] Projection engine run completed.
2025-05-23 15:40:19,633 [INFO    ] [cost_model.projections.cli.main:144] Saving detailed results...
2025-05-23 15:40:19,633 [INFO    ] [cost_model.projections.reporting.save_detailed_results:90] Saving detailed results for 'projection_cli' to output_dev/projection_cli_results...
2025-05-23 15:40:19,634 [INFO    ] [cost_model.projections.reporting.save_detailed_results:101] Filtered out 0 employees terminated in prior years
2025-05-23 15:40:19,640 [INFO    ] [cost_model.projections.reporting.save_detailed_results:107] Final EOY snapshot saved to output_dev/projection_cli_results/projection_cli_final_eoy_snapshot.parquet
2025-05-23 15:40:19,644 [INFO    ] [cost_model.projections.reporting.save_detailed_results:112] Final cumulative event log saved to output_dev/projection_cli_results/projection_cli_final_cumulative_event_log.parquet
2025-05-23 15:40:19,644 [INFO    ] [cost_model.projections.reporting.save_detailed_results:137] Summary statistics saved to output_dev/projection_cli_results/projection_cli_summary_statistics.parquet
2025-05-23 15:40:19,644 [WARNING ] [cost_model.projections.reporting.save_detailed_results:153] No employment status summary data to save
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.reporting.save_detailed_results:169] Run config saved to output_dev/projection_cli_results/projection_cli_run_config.yaml
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.reporting.save_detailed_results:171] Detailed results for 'projection_cli' saved to output_dev/projection_cli_results
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:160] Detailed results for 'projection_cli' saved to output_dev/projection_cli_results
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:163] After save_detailed_results, full directory structure under PosixPath('output_dev/projection_cli_results'):
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   projection_cli_final_cumulative_event_log.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   yearly_snapshots
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   consolidated_snapshots.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   projection_cli_run_config.yaml
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   projection_cli_final_eoy_snapshot.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   projection_cli_summary_statistics.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   projection_cli_employment_status_summary.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   yearly_snapshots/projection_cli_snapshot_2025.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   yearly_snapshots/projection_cli_snapshot_2027.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   yearly_snapshots/projection_cli_snapshot_2026.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   yearly_snapshots/projection_cli_snapshot_2029.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:165]   yearly_snapshots/projection_cli_snapshot_2028.parquet
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.cli.main:168] Consolidating yearly snapshots into a single file...
2025-05-23 15:40:19,650 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:347] Reading snapshot projection_cli_snapshot_2025.parquet → setting simulation_year=2025
2025-05-23 15:40:19,652 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:347] Reading snapshot projection_cli_snapshot_2026.parquet → setting simulation_year=2026
2025-05-23 15:40:19,654 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:347] Reading snapshot projection_cli_snapshot_2027.parquet → setting simulation_year=2027
2025-05-23 15:40:19,655 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:347] Reading snapshot projection_cli_snapshot_2028.parquet → setting simulation_year=2028
2025-05-23 15:40:19,656 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:347] Reading snapshot projection_cli_snapshot_2029.parquet → setting simulation_year=2029
2025-05-23 15:40:19,660 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:381] Consolidated 5 snapshots → output_dev/projection_cli_results/consolidated_snapshots.parquet
2025-05-23 15:40:19,660 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:382] Final combined snapshot has 861 records
2025-05-23 15:40:19,660 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:383] Years covered: [2025, 2026, 2027, 2028, 2029]
2025-05-23 15:40:19,661 [INFO    ] [cost_model.projections.snapshot.consolidate_snapshots_to_parquet:384] simulation_year values: [2025, 2026, 2027, 2028, 2029]
2025-05-23 15:40:19,661 [INFO    ] [cost_model.projections.cli.main:173] Consolidated snapshots created successfully
2025-05-23 15:40:19,661 [INFO    ] [cost_model.projections.cli.main:175] Generating and saving plots...
2025-05-23 15:40:19,661 [WARNING ] [cost_model.projections.reporting.plot_projection_results:31] Summary DataFrame is empty or missing required columns for plotting. Skipping plotting.
2025-05-23 15:40:19,661 [INFO    ] [cost_model.projections.cli.main:178] Projection run for scenario 'projection_cli' completed successfully.
2025-05-23 15:40:19,661 [INFO    ] [cost_model.projections.cli.main:179] All outputs saved in: output_dev/projection_cli_results
